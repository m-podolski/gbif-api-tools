name: Docker CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags: ["v*"]
  pull_request:
    branches: [ "main" ]

jobs:
  database_build_push:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: mpodolski88/gbif-api-tools-database
          tags: |
            type=semver,pattern={{version}}
            type=ref,event=branch

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:database"
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}

#  backend_test:
#    needs: [ database_build_push ]
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Publish
#        run: echo 'The  backend_test job is running'

        #      - name: Set up JDK 17 for x64
        #        uses: actions/setup-java@v3
        #        with:
        #          java-version: 17
        #          distribution: temurin

        #      - name: Set up Postgres container

        #      - name: Setup Gradle
        #        uses: gradle/gradle-build-action@v2
        #        with:
        #          gradle-version: 7.5.1

        #      - name: Check out Source
        #        uses: actions/checkout@v3
        #      - name: Validate Gradle Wrapper
        #        uses: gradle/wrapper-validation-action@v1
        #      - name: Execute Gradle 'check'
        # add argument for profile
        # publish report on gradle enterprise
        #        run: ./gradlew check --scan

        #      - name: Upload Build Reports
        #        uses: actions/upload-artifact@v3
        #        with:
        #          name: build-reports
        #          path: build/reports/
        # validate upload/download

#  backend_build_push:
#    runs-on: ubuntu-22.04
#    needs: [ backend_test ]
#    steps:
#      - name: Build
#        run: echo 'The backend_build job is running'

    # tag image with version + commit SHA