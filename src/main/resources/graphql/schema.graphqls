type Taxon {
    id: ID!
    path: String!
    nameCanonical: String!
    authorship: String!
    numDescendants: Int!
    numOccurrences: Int!
    extinct: Boolean!
}

input TaxonInput {
    path: String!
    nameCanonical: String!
    authorship: String!
    numDescendants: Int!
    numOccurrences: Int!
    extinct: Boolean!
}

type Query {
    findAllTaxa: [Taxon]!
    findTaxon(id: ID!): Taxon
}

type Mutation {
    # Used only in development
    createTaxa(taxa: [TaxonInput!]!): [Taxon!]!
    # Used in development to limit the amount fetched and the size of the tree
    fetchGbifTaxaToLevel(depth: Level! = KINGDOM) : FetchResponse!
    # Used to generate the complete dataset in production manually
    fetchGbifTaxa : FetchResponse!
}

enum Level {
    KINGDOM
    PHYLUM
    CLASS
    ORDER
    FAMILY
    GENUS
    SPECIES
}

type FetchResponse {
    message: String!
    success: Boolean!
    taxa: [Taxon!]!
}
